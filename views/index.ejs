<!DOCTYPE html>
<html>

<head>
	<title>Wyze Cam Pan <%if (user && canControl) { %>Controller<% }else{ %>Viewer<% } %></title>
	<link rel="apple-touch-icon" sizes="57x57" href="./img/favicons/apple-icon-57x57.png">
	<link rel="apple-touch-icon" sizes="60x60" href="./img/favicons/apple-icon-60x60.png">
	<link rel="apple-touch-icon" sizes="72x72" href="./img/favicons/apple-icon-72x72.png">
	<link rel="apple-touch-icon" sizes="76x76" href="./img/favicons/apple-icon-76x76.png">
	<link rel="apple-touch-icon" sizes="114x114" href="./img/favicons/apple-icon-114x114.png">
	<link rel="apple-touch-icon" sizes="120x120" href="./img/favicons/apple-icon-120x120.png">
	<link rel="apple-touch-icon" sizes="144x144" href="./img/favicons/apple-icon-144x144.png">
	<link rel="apple-touch-icon" sizes="152x152" href="./img/favicons/apple-icon-152x152.png">
	<link rel="apple-touch-icon" sizes="180x180" href="./img/favicons/apple-icon-180x180.png">
	<link rel="icon" type="image/png" sizes="192x192" href="./img/favicons/android-icon-192x192.png">
	<link rel="icon" type="image/png" sizes="32x32" href="./img/favicons/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="96x96" href="./img/favicons/favicon-96x96.png">
	<link rel="icon" type="image/png" sizes="16x16" href="./img/favicons/favicon-16x16.png">
	<link rel="manifest" href="./img/favicons/manifest.json">
	<meta name="msapplication-TileColor" content="#ffffff">
	<meta name="msapplication-TileImage" content="./img/favicons/ms-icon-144x144.png">
	<meta name="theme-color" content="#ffffff">
	<style type="text/css">
		html,
		body {
			background-color: #111;
			text-align: center;
			overflow: hidden;
			margin: 0;
			border: 0;
			padding: 0;
		}

		img {
			z-index: 999 !important;
			cursor: pointer;
		}

		input[type=checkbox] {
			height: 0;
			width: 0;
			visibility: hidden;
		}

		label {
			cursor: pointer;
			text-indent: -9999px;
			width: 100px;
			height: 50px;
			background: grey;
			display: block;
			border-radius: 50px;
			position: relative;
		}

		label:after {
			content: '';
			position: absolute;
			top: 2.5px;
			left: 2.5px;
			width: 45px;
			height: 45px;
			background: #fff;
			border-radius: 45px;
			transition: 0.3s;
		}

		input:checked+label {
			background: #bada55;
		}

		input:checked+label:after {
			left: calc(100% - 2.5px);
			transform: translateX(-100%);
		}

		label:active:after {
			width: 65px;
		}


		.minor-image {
			width: 7.5vmax;
		}

		.major-image {
			width: 15vmax;
		}

		.shadowed {
			-webkit-filter: drop-shadow(0px 0px 10px #FFFFFF);
			filter: drop-shadow(0px 0px 10px #FFFFFF);
			opacity: 50%;
		}

		.modal {
			display: none;
			position: fixed;
			z-index: 9999;
			padding-top: 100px;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			overflow: auto;
			background-color: rgb(0, 0, 0);
			background-color: rgba(0, 0, 0, 0.4);
		}

		.modal-content {
			border-radius: 25px;
			background-color: #fefefe;
			margin: auto;
			padding: 20px;
			border: 1px solid #888;
			width: 80%;
		}

		.close {
			color: #aaaaaa;
			float: right;
			font-size: 28px;
			font-weight: bold;
		}

		.close:hover,
		.close:focus {
			color: #000;
			text-decoration: none;
			cursor: pointer;
		}

		.container {
			position: absolute;
		}

		.container,
		.containertable {
			width: 100%;
			height: 100%;
			max-width: 100%;
			max-height: 100%;
			top: 0;
			bottom: 0;
			right: 0;
			left: 0;
			border: 0;
			margin: 0;
			padding: 0;
			border-spacing: 0;
			border-collapse: collapse;
		}

		.centered {
			text-align: center;
		}

		.halign-right {
			text-align: right;
		}

		.halign-left {
			text-align: left;
		}

		.centered-vert {
			top: 0;
			bottom: 0;
			margin: auto;
		}

		td.centered {
			width: 100%;
		}

		/* class applies to select element itself, not a wrapper element */
		.select-css {
			display: block;
			font-size: 16px;
			font-family: sans-serif;
			font-weight: 700;
			color: #444;
			line-height: 1.3;
			padding: .6em 1.4em .5em .8em;
			width: 100%;
			max-width: 100%;
			/* useful when width is set to anything other than 100% */
			box-sizing: border-box;
			margin: 0;
			border: 1px solid #aaa;
			box-shadow: 0 1px 0 1px rgba(0, 0, 0, .04);
			border-radius: .5em;
			-moz-appearance: none;
			-webkit-appearance: none;
			appearance: none;
			background-color: #fff;
			/* note: bg image below uses 2 urls. The first is an svg data uri for the arrow icon, and the second is the gradient. 
		for the icon, if you want to change the color, be sure to use `%23` instead of `#`, since it's a url. You can also swap in a different svg icon or an external image reference
		
	*/
			background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),
				linear-gradient(to bottom, #ffffff 0%, #e5e5e5 100%);
			background-repeat: no-repeat, repeat;
			/* arrow icon position (1em from the right, 50% vertical) , then gradient position*/
			background-position: right .7em top 50%, 0 0;
			/* icon size, then gradient */
			background-size: .65em auto, 100%;
		}

		/* Hide arrow icon in IE browsers */
		.select-css::-ms-expand {
			display: none;
		}

		/* Hover style */
		.select-css:hover {
			border-color: #888;
		}

		/* Focus style */
		.select-css:focus {
			border-color: #aaa;
			/* It'd be nice to use -webkit-focus-ring-color here but it doesn't work on box-shadow */
			box-shadow: 0 0 1px 3px rgba(59, 153, 252, .7);
			box-shadow: 0 0 0 3px -moz-mac-focusring;
			color: #222;
			outline: none;
		}

		/* Set options to normal weight */
		.select-css option {
			font-weight: normal;
		}

		/* Support for rtl text, explicit support for Arabic and Hebrew */
		*[dir="rtl"] .select-css,
		:root:lang(ar) .select-css,
		:root:lang(iw) .select-css {
			background-position: left .7em top 50%, 0 0;
			padding: .6em .8em .5em 1.4em;
		}

		/* Disabled styles */
		.select-css:disabled,
		.select-css[aria-disabled=true] {
			color: graytext;
			background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22graytext%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),
				linear-gradient(to bottom, #ffffff 0%, #e5e5e5 100%);
		}

		.select-css:disabled:hover,
		.select-css[aria-disabled=true] {
			border-color: #aaa;
		}
	</style>
	<script>
		function move(direction) {
			var xhttp = new XMLHttpRequest();
			xhttp.open("GET", `/${direction}`, false);
			xhttp.send();
			if (xhttp.status != 200) {
				window.location.reload();
			}
		}

		function nightmode(onOrOffBoolean) {
			var xhttp = new XMLHttpRequest();
			xhttp.open("GET", `/nightmode?on=${onOrOffBoolean.toString()}`, false);
			xhttp.send();
			if (xhttp.status != 200) {
				window.location.reload();
			}
		}

		function refreshUserSettings() {
			var xhttp = new XMLHttpRequest();
			xhttp.open("GET", "/usersettings", false);
			xhttp.send();
			if (xhttp.status != 200) {
				window.location.reload();
			}
			try {
				allUsers = JSON.parse(xhttp.responseText);
			} catch (err) {
				window.location.reload();
			}
		}

		function canadmin(email, onOrOffBoolean) {
			var xhttp = new XMLHttpRequest();
			xhttp.open("GET", `/canadmin?on=${onOrOffBoolean.toString()}&email=${encodeURIComponent(email)}`, false);
			xhttp.send();
			refreshUserSettings();
		}

		function cancontrol(email, onOrOffBoolean) {
			var xhttp = new XMLHttpRequest();
			xhttp.open("GET", `/cancontrol?on=${onOrOffBoolean.toString()}&email=${encodeURIComponent(email)}`, false);
			xhttp.send();
			refreshUserSettings();
		}

		function showModal() {
			refreshUserSettings();
			document.getElementById('settings-modal').style.display = 'block';
		}

		function hideModal() {
			document.getElementById('settings-modal').style.display = 'none';
			document.getElementById('settings-form').reset();
			document.getElementById("canControl").disabled = true;
			document.getElementById("canAdmin").disabled = true;
		}
		window.addEventListener(('ontouchend' in window ? 'touchend' : 'click'), function (event) {
			if (event.target == document.getElementById('settings-modal')) {
				hideModal();
			}
		});
	</script>
</head>

<body>
	<canvas id="video-canvas" style="max-width: 100%; max-height: 100%;"></canvas>
	<script type="text/javascript" src="./js/jsmpeg.min.js"></script>
	<div class="container">
		<table class="containertable">
			<tr style="vertical-align: top;">
				<td class="halign-left">
					<%if (canAdmin) { %>
					<div id="settings-modal" class="modal">
						<div class="modal-content">
							<span onclick="hideModal();" class="close">&times;</span>
							<form id="settings-form">
								Email: <select id="email-select" class="select-css" onchange="emailSelectChanged()">
									<option disabled selected>--- Select Email ---</option>
									<%
									for (const [email, settings] of Object.entries(userList)) {
										%><option value="<%=email %>"><%=email %></option><%
									}
									%>
								</select><br />
								Control: <input type="checkbox" disabled onchange="canControlChange()"
									id="canControl"><label for="canControl">Toggle</label><br />
								Admin: <input type="checkbox" disabled onchange="canAdminChange()" id="canAdmin"><label
									for="canAdmin">Toggle</label>
							</form>
						</div>
					</div>
					<script>
						var allUsers = JSON.parse(atob("<%- Buffer.from(JSON.stringify(userList)).toString('base64') %>"));

						var isSettingCurrent = false;

						function emailSelectChanged() {
							isSettingCurrent = true;
							var email = document.getElementById("email-select").value;
							document.getElementById("canControl").checked = allUsers[email].canControl;
							document.getElementById("canAdmin").checked = allUsers[email].canAdmin;
							document.getElementById("canControl").disabled = false;
							document.getElementById("canAdmin").disabled = false;
							console.log(`Settings for "${email}" have been populated!`);
							isSettingCurrent = false;
						}

						function canControlChange() {
							if (isSettingCurrent) return;
							var email = document.getElementById("email-select").value;
							cancontrol(email, document.getElementById("canControl").checked)
						}

						function canAdminChange() {
							if (isSettingCurrent) return;
							var email = document.getElementById("email-select").value;
							canadmin(email, document.getElementById("canAdmin").checked)
						}
					</script>
					<img onclick="showModal();" class="shadowed minor-image" src="./img/settings.png" />
					<% } %>
				</td>
				<td class="centered">
					<%if ((user && canControl) || anonymousControl) { %>
					<img onclick="move('up');" class="shadowed major-image centered" src="./img/up.png" />
					<% } %>
				</td>
				<td class="halign-right">
					<%if (loginEnabled){%>
					<%if (user) { %>
					<a href="/logout"><img class="shadowed minor-image" src="./img/logout.png" /></a>
					<% }else{ %>
					<a href="/login"><img class="shadowed minor-image" src="./img/login.png" /></a>
					<% } %>
					<% } %>
				</td>
			</tr>
			<tr style="vertical-align: middle;">
				<td class="halign-left">
					<%if ((user && canControl) || anonymousControl) { %>
					<img onclick="move('left');" class="shadowed major-image" src="./img/left.png" />
					<% } %>
				</td>
				<td class="centered"></td>
				<td class="halign-right">
					<%if ((user && canControl) || anonymousControl) { %>
					<img onclick="move('right');" class="shadowed major-image" src="./img/right.png" />
					<% } %>
				</td>
			</tr>
			<tr style="vertical-align: bottom;">
				<td class="halign-left">
					<%if ((user && canControl) || anonymousControl) { %>
					<img onclick="move('calibrate');" class="shadowed minor-image" src="./img/calibrate.png" />
					<% } %>
				</td>
				<td class="centered">
					<%if ((user && canControl) || anonymousControl) { %>
					<img onclick="move('down');" class="shadowed major-image" src="./img/down.png" />
					<% } %>
				</td>
				<td class="halign-right">
					<%if ((user && canControl) || anonymousControl) { %>
					<img onclick="nightmode(false);" class="shadowed minor-image" style="margin: 1.5vmin;"
						src="./img/night-off.png" />
					<img onclick="nightmode(true);" class="shadowed minor-image" src="./img/night-on.png" />
					<% } %>
				</td>
			</tr>
		</table>
	</div>
	<script type="text/javascript">
		var canvas = document.getElementById('video-canvas');
		var url = 'ws<%if (ssl) { %>s<% } %>://' + document.location.host + '/ws';
		var player = new JSMpeg.Player(url, {
			canvas: canvas
		});
		document.body.addEventListener('touchstart', function () {
			if (player.audioOut.unlocked) {
				player.audioOut.unlocked = false;
			} else {
				player.audioOut.unlock();
			}
		});
	</script>
</body>

</html>